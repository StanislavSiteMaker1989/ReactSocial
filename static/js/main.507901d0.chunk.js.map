{"version":3,"sources":["Redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/user.png","assets/images/loader.svg","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/validators/object-helpers.js","Redux/Users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","Redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","Redux/app-reducer.js","hoc/withSuspense.js","App.js","Redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","Redux/profile-reducer.js"],"names":["initialState","DialogsData","id","name","MassagePage","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","toggleisFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","PagesCount","Pages","createSelector","UsersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","messages","length","stopSubmit","_error","formData","initialized","appReducer","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","withRouter","app","promise","Promise","all","reducers","combineReducers","ProfilePage","profileReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","child","hasError","formControl","children","Textarea","restProps","placeholder","validators","component","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","PostsData","likecount","profile","addPostActionCreator","NewPostText","setStatus","getUserProfile","newPost"],"mappings":"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","file":"static/js/main.507901d0.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    DialogsData: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Mary\"},\r\n        {id: 3, name: \"Art\"},\r\n        {id: 4, name: \"Giena\"},\r\n    ],\r\n    MassagePage: [\r\n        {id: 1, message: \"ДИМА ЛЮБИТ ШАВУХУ 1\"},\r\n        {id: 1, message: \"ДИМА ЛЮБИТ ШАВУХУ 2\"},\r\n        {id: 1, message: \"ДИМА ЛЮБИТ ШАВУХУ 3\"},\r\n        {id: 1, message: \"ДИМА ЛЮБИТ ШАВУХУ 4\"},\r\n        {id: 1, message: \"ДИМА ЛЮБИТ ШАВУХУ 5\"},\r\n        {id: 1, message: \"ДИМА ЛЮБИТ ШАВУХУ 6\"},\r\n        {id: 1, message: \"ДИМА ЛЮБИТ ШАВУХУ 7\"},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n      switch (action.type) {\r\n         case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                MassagePage: [...state.MassagePage, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__flBbt\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.6c3daf60.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"2383fc23-7979-4c82-8f1a-470f515f3e51\"\r\n    }\r\n})\r\n\r\nexport  const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return  instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n            {withCredentials: true}).then(response =>{return response.data})\r\n},\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        return instance.get(`profile/` + userId)\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n/*export const getUsers = (currentPage = 1, pageSize = 10) => {\r\n   return  instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        {withCredentials: true}).then(response =>{return response.data})*/\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6C7Eh\",\"item\":\"Navbar_item__1wZeX\",\"active\":\"Navbar_active__9PqMS\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/Profile\" activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/Dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n        </div><div className={s.item}>\r\n            <NavLink to=\"/Users\" activeClassName={s.active}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n        <NavLink to='/News' activeClassName={s.active} >News</NavLink>\r\n         </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/Music' activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/Settings' activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/validators/object-helpers\";\r\n\r\nlet SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nlet SET_TOTAL_USERS_COUNT = \"SET-TOTAL-USERS-COUNT\";\r\nlet TOOGLE_IS_FETCHING = \"TOOGLE-IS-FETCHING\";\r\nlet TOOGLE_IS_FOLLOWING_PROGRESS = \"TOOGLE-IS-FOLLOWING-PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, \"id\", {followed: true} )\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, \"id\", {followed: false} )\r\n            }\r\n        case 'SET-USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOOGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID) => ({type: 'FOLLOW', userID});\r\nexport const unfollowSuccess = (userID) =>\r\n    ({type: 'UNFOLLOW', userID});\r\nexport const setUsers = (users) => ({type: 'SET-USERS', users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleisFetching = (isFetching) => ({type: TOOGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOOGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleisFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleisFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n       <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n}\n\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n\r\n    let PagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let Pages = [];\r\n    for (let i = 1; i <= PagesCount; i++) {\r\n        Pages.push(i)\r\n    }\r\n    return <div>\r\n        {<Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                    totalItemsCount={totalUsersCount} pageSize={pageSize}/>}\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.UsersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.UsersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.UsersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../Redux/Users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/users-selectors\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.UsersPage.users,\r\n        pageSize: state.UsersPage.pageSize,\r\n        totalUsersCount: state.UsersPage.totalUsersCount,\r\n        currentPage: state.UsersPage.currentPage,\r\n        isFetching: state.UsersPage.isFetching,\r\n        followingInProgress: state.UsersPage.followingInProgress\r\n    }\r\n}*/\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleisFetching: (isFetching) => {\r\n            dispatch(toggleisFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    getUsers: requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress\r\n}))(UsersContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.impericon.com/360x520x85/media/catalog/product/p/p/pp33430_lg.jpg' />\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n    </header>\r\n\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n\n            return {\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, logout} from \"../../Redux/auth-reducer\";\n\n\n\nclass HeaderContainer extends React.Component {\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {required} from \"../../utils/validators/validators\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {login} from \"../../Redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport style from '../common/FormsControls/FormsControls.module.css'\n\n\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n            { error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login} )(Login);","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    debugger\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<Preloader />} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/Dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/Profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/Users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                    {/* <Route path='/News' component={News}/>\n                    <Route path='/Music' component={Music}/>\n                    <Route path='/Settings' component={Settings}/>*/}\n                </div>\n\n\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./Users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    MassagePage: dialogsReducer,\r\n    UsersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\n     ReactDOM.render(\n         <HashRouter>\n            <Provider store={store}>\n                <App />\n             </Provider>\n        </HashRouter>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, child, ...props}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            { hasError && <span>{error}</span> }\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","import React from \"react\";\r\nimport preloader from '../../../assets/images/loader.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport  default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1DtgN\",\"error\":\"FormsControls_error__2_aWI\",\"formSummaryError\":\"FormsControls_formSummaryError__3xSRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3QwGE\",\"pageNumber\":\"Paginator_pageNumber__2Nn5d\",\"selectedPage\":\"Paginator_selectedPage__fBPAK\"};","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3urFI\",\"loginBlock\":\"Header_loginBlock__2t2KA\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, message: \"My name Stanislav\", likecount: 2222},\r\n        {id: 2, message: \"I live in Kharkov\", likecount: 5555},\r\n        {id: 2, message: \"I love Mary\", likecount: 9999},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) =>{\r\n\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.NewPostText,\r\n                likecount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData, newPost],\r\n                NewPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport let addPostActionCreator = (NewPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        NewPostText\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n\r\n            dispatch(setStatus(response.data));\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}