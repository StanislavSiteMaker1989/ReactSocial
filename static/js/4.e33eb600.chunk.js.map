{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/DialogsMessage/DialogsMessage.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","className","s","people","active","to","id","name","DialogsMessage","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","MassagePage","DialogsElement","DialogsData","map","dialog","key","MassageElements","isAuth","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,0B,oJCalKC,EAVK,SAACC,GACjB,OACI,6BACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,S,kBCO7CC,EAZQ,SAACR,GACpB,OACI,6BACI,yBAAKC,UAAWC,IAAEO,SACd,6BACKT,EAAMS,Y,yCCHrBC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAfQ,SAACZ,GACpB,OACI,0BAAMc,SAAUd,EAAMe,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBd,KAAK,oBAEjD,6BACI,6CCuBDe,EA9BC,SAACtB,GAEb,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAiBF,EAAMG,YAAYC,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAatB,GAAIsB,EAAOtB,GAAIuB,IAAKD,EAAOtB,GAC3BC,KAAMqB,EAAOrB,UAC3EuB,EAAkBP,EAAMC,YAAYG,KAAI,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAAgBH,GAAIG,EAAQH,GAAIG,QAASA,EAAQA,QACjCoB,IAAKpB,EAAQH,QAOpF,OAAKN,EAAM+B,OAEP,yBAAK9B,UAAWC,IAAE8B,SACd,yBAAK/B,UAAWC,IAAE+B,cACZR,GAEN,yBAAKxB,UAAWC,IAAEgC,UACd,6BAAOJ,IAGX,kBAAC,EAAD,CAAgBhB,SAdJ,SAACqB,GACjBnC,EAAMoC,YAAYD,EAAOE,oBAGH,kBAAC,IAAD,CAAUhC,GAAI,Y,iDCnBxCiC,EAA6B,SAACf,GAAD,MAAY,CACzCQ,OAAQR,EAAMgB,KAAKR,S,OCmBRS,sBACXC,aAjBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAMF,SAACkB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDXR,SAACO,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAK9C,MAAM+B,OAET,kBAACa,EAAcE,KAAK9C,OAFI,kBAAC,IAAD,CAAUK,GAAG,eAJT,GAEX0C,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCM9DL,CAEOlB","file":"static/js/4.e33eb600.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__1SQe7\",\"peopleDialogs\":\"Dialogs_peopleDialogs__2Exag\",\"people\":\"Dialogs_people__xAdtP\",\"message\":\"Dialogs_message__Me8pK\",\"active\":\"Dialogs_active__VrtNQ\"};","import React from \"react\";\r\nimport s from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.people + \" \" + s.active}>\r\n                <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from \"./DialogsMessage.module.css\";\r\n\r\nconst DialogsMessage = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsMessage;\r\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       placeholder='Enter your message' name=\"newMessageBody\" />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport DialogsMessage from \"./DialogsMessage/DialogsMessage\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.MassagePage;\r\n\r\n    let DialogsElement = state.DialogsData.map(dialog => <DialogsItem id={dialog.id} key={dialog.id}\r\n                                                                      name={dialog.name}/>);\r\n    let MassageElements = state.MassagePage.map(message => <DialogsMessage id={message.id} message={message.message}\r\n                                                                           key={message.id}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { DialogsElement }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ MassageElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n\n}","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessageCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        MassagePage: state.MassagePage\r\n\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}