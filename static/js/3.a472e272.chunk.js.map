{"version":3,"sources":["components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","description","src","photos","small","Preloader","Post","item","message","like","likecount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","PostElement","PostsData","map","m","values","addPost","NewPostText","posts","MyPostsContainer","connect","state","ProfilePage","dispatch","newPostText","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a472e272.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__W-07K\",\"description\":\"ProfileInfo_description__K5pPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__2XE67\",\"posts\":\"MyPosts_posts__19utT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"Post_like__3jdJ_\",\"item\":\"Post_item__1MNoe\"};","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, ...props}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n       <div >\r\n           {/*<div className={s.content}>\r\n               <img src='https://cdn.pixabay.com/photo/2017/02/08/17/24/butterfly-2049567_1280.jpg' />\r\n           </div>*/}\r\n\r\n           <div className={s.description}>\r\n               <img src={profile.photos.small} />\r\n               <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n           </div>\r\n           <div>Description tools</div>\r\n\r\n       </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import s from \"./Post.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Post = (props) => {\r\n        return<div className={s.item}>\r\n        <img src='https://art1.ru/media/photo/content/GOT0804-14_3.JPG' />\r\n        <div>\r\n            {props.message}\r\n            <span className={s.like}>like {props.likecount}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"NewPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let PostElement = props.PostsData.map(m => <Post message={m.message} likecount={m.likecount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.NewPostText);\r\n    }\r\n    return (\r\n        <div className={s.item}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {PostElement}\r\n            </div>\r\n\r\n    </div>)\r\n})\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        PostsData: state.ProfilePage.PostsData,\r\n        NewPostText: state.ProfilePage.NewPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div className={s.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.ProfilePage.profile,\r\n    status: state.ProfilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n    });\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile,getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}